version: "3.8"

services:
  # Infrastructure Services
  postgres:
    image: postgres
    container_name: postgres-container
    environment:
      POSTGRES_USER: lau
      POSTGRES_PASSWORD: lau2962003
      POSTGRES_DB: estate_elite
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lau"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis-container
    command: redis-server --requirepass lau2962003 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "lau2962003", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: minio-container
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - app_network
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=lau
      - RABBITMQ_DEFAULT_PASS=lau2962003
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Application Services
  functional-service-1:
    build:
      context: ../src
      dockerfile: functional-service.dockerfile
    container_name: functional-service-container-1
    ports:
      - "5000:5000"
      - "5100:5100"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
    volumes:
      - functional_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  functional-service-2:
    build:
      context: ../src
      dockerfile: functional-service.dockerfile
    container_name: functional-service-container-2
    ports:
      - "5200:5000"
      - "5300:5100"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
    volumes:
      - functional_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  identity-service-1:
    build:
      context: ../src
      dockerfile: identity-service.dockerfile
    container_name: identity-service-container-1
    ports:
      - "5001:5001"
      - "5101:5101"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
    volumes:
      - identity_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  identity-service-2:
    build:
      context: ../src
      dockerfile: identity-service.dockerfile
    container_name: identity-service-container-2
    ports:
      - "5201:5001"
      - "5301:5101"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
    volumes:
      - identity_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  payment-service-1:
    build:
      context: ../src
      dockerfile: payment-service.dockerfile
    container_name: payment-service-container-1
    ports:
      - "5002:5002"
      - "5102:5102"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
    volumes:
      - payment_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  payment-service-2:
    build:
      context: ../src
      dockerfile: payment-service.dockerfile
    container_name: payment-service-container-2
    ports:
      - "5202:5002"
      - "5302:5102"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
    volumes:
      - payment_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  property-service-1:
    build:
      context: ../src
      dockerfile: property-service.dockerfile
    container_name: property-service-container-1
    ports:
      - "5003:5003"
      - "5103:5103"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
      - MinIO__Endpoint=minio:9000
      - MinIO__AccessKey=minioadmin
      - MinIO__SecretKey=minioadmin
    volumes:
      - property_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  property-service-2:
    build:
      context: ../src
      dockerfile: property-service.dockerfile
    container_name: property-service-container-2
    ports:
      - "5203:5003"
      - "5303:5103"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=estate_elite;Username=lau;Password=lau2962003
      - ConnectionStrings__Redis=redis:6379,password=lau2962003
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=lau
      - RabbitMQ__Password=lau2962003
      - MinIO__Endpoint=minio:9000
      - MinIO__AccessKey=minioadmin
      - MinIO__SecretKey=minioadmin
    volumes:
      - property_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - functional-service-1
      - functional-service-2
      - identity-service-1
      - identity-service-2
      - payment-service-1
      - payment-service-2
      - property-service-1
      - property-service-2
    networks:
      - app_network
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis-data:
  minio_data:
  rabbitmq_data:
  functional_logs:
  identity_logs:
  payment_logs:
  property_logs:
